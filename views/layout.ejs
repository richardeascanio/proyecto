<!DOCTYPE html>
<html>
  <head>
    <title>MetroPavo App</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/estilos.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/offcanvas.css">
    <!--STYLES END-->
  </head>

  <body>
<nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
  <a class="navbar-brand" href="../#">MetroPavo App</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
    aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item active dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true"
          aria-expanded="false">
          Consultar</a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
          <a class="dropdown-item" href="../../estudiante/consultar">Estudiante</a>
          <a class="dropdown-item" href="../../profesor/consultar">Profesor</a>
          <div class="dropdown-divider"></div>
          <a class="dropdown-item" href="../../materia/consultar">Materia</a>
          <a class="dropdown-item" href="../../aula/consultar">Aula</a>
          <a class="dropdown-item" href="../../departamento/consultar">Departamento</a>
          <a class="dropdown-item" href="../../seccion/consultar">Sección</a>
          <a class="dropdown-item" href="../../selecciondeportiva/consultar">Selección</a>
          <a class="dropdown-item" href="../../periodo/consultar">Período</a>
          <a class="dropdown-item" href="../../carrera/consultar">Carrera</a>
          <a class="dropdown-item" href="../../beca/consultar">Beca</a>
        </div>
      </li>
      <li class="nav-item active dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true"
          aria-expanded="false">
          Añadir</a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
          <a class="dropdown-item" href="../../estudiante/agregar">Estudiante</a>
          <a class="dropdown-item" href="../../profesor/agregar">Profesor</a>
          <div class="dropdown-divider"></div>
          <a class="dropdown-item" href="../../materia/agregar">Materia</a>
          <a class="dropdown-item" href="../../aula/agregar">Aula</a>
          <a class="dropdown-item" href="../../departamento/agregar">Departamento</a>
          <a class="dropdown-item" href="../../seccion/agregar">Sección</a>
          <a class="dropdown-item" href="../../selecciondeportiva/agregar">Selección</a>
          <a class="dropdown-item" href="../../periodo/agregar">Período</a>
          <a class="dropdown-item" href="../../carrera/agregar">Carrera</a>
          <a class="dropdown-item" href="../../beca/agregar">Beca</a>
        </div>
      </li>
      <li class="nav-item active">
        <a class="nav-link" href="../../busquedas">Busquedas Especiales</a>
      </li>
    </ul>
  </div>
</nav>

    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/jquery-3.3.1.js"></script>
    <script src="/js/bootstrap.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/holder.min.js"></script>
    <script src="/js/offcanvas.js"></script>
    <script src="/js/popper.min.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
